task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}


apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'


repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.25.1'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-jdk-http', version: '2.25.1'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: '2.25.1'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-moxy', version: '2.25.1'


    compile 'org.glassfish.jersey.core:jersey-client:2.25.1'
    compile group: 'javax.xml.ws', name: 'jaxws-api', version: '2.2.11'
    compile 'com.google.code.gson:gson:2.6.2'


    compile('se.michaelthelin.spotify:spotify-web-api-java:1.5.0')

    testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-inmemory:2.25.1'
}

def jarName

if (project.hasProperty("mainClass")){
    mainClassName = project.getProperty("mainClass")    
}else {
    mainClassName = "de.uniba.dsg.jaxrs.JaxRsServer"
}
if (project.hasProperty("jarName")){
    jarName = project.getProperty("jarName")    
}else {
    jarName = "MusicApi.jar"
}


shadowJar {
 
    mergeServiceFiles()
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    archiveName = jarName
}


jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}


